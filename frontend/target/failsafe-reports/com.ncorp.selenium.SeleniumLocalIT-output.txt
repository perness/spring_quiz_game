01:16:07.344 [main] INFO  org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.ncorp.selenium.SeleniumLocalIT], using SpringBootContextLoader
01:16:07.354 [main] INFO  org.springframework.test.context.support.AbstractContextLoader - Could not detect default resource locations for test class [com.ncorp.selenium.SeleniumLocalIT]: no resource found for suffixes {-context.xml, Context.groovy}.
01:16:07.431 [main] INFO  org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
01:16:07.461 [main] INFO  org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@2e17a321, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@521bb1a4, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@35f3a22c, org.springframework.test.context.support.DirtiesContextTestExecutionListener@1a0c5e9, org.springframework.test.context.transaction.TransactionalTestExecutionListener@123d7057, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@1d247525, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@35ee466f, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@32e652b6, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@4ba02375, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@7593ea79, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@3289079a, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@32fa809f]
Starting ChromeDriver 2.36.540471 (9c759b81a907e70363c6312294d30b6ccccc2752) on port 19963
Only local connections are allowed.
Apr 04, 2018 1:16:08 AM org.openqa.selenium.remote.ProtocolHandshake createSession
INFO: Detected dialect: OSS

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::        (v1.5.4.RELEASE)

01:16:09.715 [main] INFO  com.ncorp.selenium.SeleniumLocalIT - Starting SeleniumLocalIT on Lenovo with PID 20167 (started by nima in /home/nima/Documents/java_enterprise/spring_project/frontend)
01:16:09.715 [main] INFO  com.ncorp.selenium.SeleniumLocalIT - The following profiles are active: test
01:16:09.737 [main] INFO  org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1fae388c: startup date [Wed Apr 04 01:16:09 CEST 2018]; root of context hierarchy
01:16:10.099 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 5.3.5.Final
01:16:11.276 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
01:16:11.468 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$825b8628] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
01:16:11.510 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.joinfaces.javaxfaces.ProjectStageAutoConfiguration' of type [org.joinfaces.javaxfaces.ProjectStageAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
01:16:11.867 [main] INFO  org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 0 (http)
01:16:11.880 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
01:16:11.881 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.15
01:16:12.238 [localhost-startStop-1] INFO  org.apache.jasper.servlet.TldScanner - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
01:16:12.264 [localhost-startStop-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
01:16:12.265 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2530 ms
01:16:12.661 [localhost-startStop-1] INFO  org.springframework.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
01:16:12.662 [localhost-startStop-1] INFO  org.springframework.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
01:16:12.662 [localhost-startStop-1] INFO  org.springframework.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
01:16:12.662 [localhost-startStop-1] INFO  org.springframework.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
01:16:12.664 [localhost-startStop-1] INFO  org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean - Mapping filter: 'springSecurityFilterChain' to: [/*]
01:16:12.665 [localhost-startStop-1] INFO  org.springframework.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'openEntityManagerInViewFilter' to: [/*]
01:16:13.015 [localhost-startStop-1] INFO  org.reflections.Reflections - Reflections took 308 ms to scan 6 urls, producing 716 keys and 3785 values 
01:16:13.386 [localhost-startStop-1] INFO  org.springframework.boot.web.servlet.ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
01:16:13.445 [localhost-startStop-1] INFO  javax.enterprise.resource.webcontainer.jsf.config - Initializing Mojarra 2.2.14 ( 20161114-2152 unable to get svn info) for context ''
01:16:13.625 [localhost-startStop-1] INFO  javax.enterprise.resource.webcontainer.jsf.application - JSF1048: PostConstruct/PreDestroy annotations present.  ManagedBeans methods marked with these annotations will have said annotations processed.
01:16:14.267 [localhost-startStop-1] INFO  org.primefaces.webapp.PostConstructApplicationEventListener - Running on PrimeFaces 6.1
01:16:14.267 [localhost-startStop-1] INFO  org.primefaces.extensions.application.PostConstructApplicationEventListener - Running on PrimeFaces Extensions 6.1
01:16:14.267 [localhost-startStop-1] INFO  org.omnifaces.VersionLoggerEventListener - Using OmniFaces version 1.14
01:16:14.430 [main] INFO  org.flywaydb.core.internal.util.VersionPrinter - Flyway 3.2.1 by Boxfuse
01:16:14.841 [main] INFO  org.flywaydb.core.internal.dbsupport.DbSupportFactory - Database: jdbc:h2:mem:test (H2 1.4)
01:16:14.906 [main] INFO  org.flywaydb.core.internal.command.DbValidate - Validated 1 migration (execution time 00:00.014s)
01:16:14.930 [main] INFO  org.flywaydb.core.internal.metadatatable.MetaDataTableImpl - Creating Metadata table: "PUBLIC"."schema_version"
01:16:14.960 [main] INFO  org.flywaydb.core.internal.command.DbMigrate - Current version of schema "PUBLIC": << Empty Schema >>
01:16:14.960 [main] INFO  org.flywaydb.core.internal.command.DbMigrate - Migrating schema "PUBLIC" to version 1.0 - createDB
01:16:15.006 [main] INFO  org.flywaydb.core.internal.command.DbMigrate - Successfully applied 1 migration to schema "PUBLIC" (execution time 00:00.077s).
01:16:15.130 [main] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Building JPA container EntityManagerFactory for persistence unit 'default'
01:16:15.155 [main] INFO  org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
01:16:15.243 [main] INFO  org.hibernate.Version - HHH000412: Hibernate Core {5.0.12.Final}
01:16:15.245 [main] INFO  org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found
01:16:15.246 [main] INFO  org.hibernate.cfg.Environment - HHH000021: Bytecode provider name : javassist
01:16:15.289 [main] INFO  org.hibernate.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
01:16:15.393 [main] INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
01:16:15.992 [main] INFO  org.hibernate.tool.hbm2ddl.SchemaValidator - HHH000229: Running schema validator
01:16:16.038 [main] INFO  org.hibernate.hql.internal.QueryTranslatorFactoryInitiator - HHH000397: Using ASTQueryTranslatorFactory
01:16:16.219 [main] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
Hibernate: select user0_.username as username1_5_0_, user0_.enabled as enabled2_5_0_, user0_.password as password3_5_0_, roles1_.user_username as user_use1_4_1_, roles1_.roles as roles2_4_1_ from users user0_ left outer join user_roles roles1_ on user0_.username=roles1_.user_username where user0_.username=?
Hibernate: insert into users (enabled, password, username) values (?, ?, ?)
Hibernate: insert into user_roles (user_username, roles) values (?, ?)
Hibernate: insert into category (id, name) values (null, ?)
Hibernate: insert into category (id, name) values (null, ?)
Hibernate: select category0_.id as id1_0_0_, category0_.name as name2_0_0_ from category category0_ where category0_.id=?
Hibernate: insert into sub_category (id, category_id, name) values (null, ?, ?)
Hibernate: select category0_.id as id1_0_0_, category0_.name as name2_0_0_ from category category0_ where category0_.id=?
Hibernate: insert into sub_category (id, category_id, name) values (null, ?, ?)
Hibernate: select category0_.id as id1_0_0_, category0_.name as name2_0_0_ from category category0_ where category0_.id=?
Hibernate: insert into sub_category (id, category_id, name) values (null, ?, ?)
Hibernate: select category0_.id as id1_0_0_, category0_.name as name2_0_0_ from category category0_ where category0_.id=?
Hibernate: insert into sub_category (id, category_id, name) values (null, ?, ?)
Hibernate: select category0_.id as id1_0_0_, category0_.name as name2_0_0_ from category category0_ where category0_.id=?
Hibernate: insert into sub_category (id, category_id, name) values (null, ?, ?)
Hibernate: select subcategor0_.id as id1_3_0_, subcategor0_.category_id as category3_3_0_, subcategor0_.name as name2_3_0_, category1_.id as id1_0_1_, category1_.name as name2_0_1_ from sub_category subcategor0_ inner join category category1_ on subcategor0_.category_id=category1_.id where subcategor0_.id=?
Hibernate: insert into quiz (id, answer_four, answer_one, answer_three, answer_two, correct_answer, question, sub_category_id) values (null, ?, ?, ?, ?, ?, ?, ?)
Hibernate: select subcategor0_.id as id1_3_0_, subcategor0_.category_id as category3_3_0_, subcategor0_.name as name2_3_0_, category1_.id as id1_0_1_, category1_.name as name2_0_1_ from sub_category subcategor0_ inner join category category1_ on subcategor0_.category_id=category1_.id where subcategor0_.id=?
Hibernate: insert into quiz (id, answer_four, answer_one, answer_three, answer_two, correct_answer, question, sub_category_id) values (null, ?, ?, ?, ?, ?, ?, ?)
Hibernate: select subcategor0_.id as id1_3_0_, subcategor0_.category_id as category3_3_0_, subcategor0_.name as name2_3_0_, category1_.id as id1_0_1_, category1_.name as name2_0_1_ from sub_category subcategor0_ inner join category category1_ on subcategor0_.category_id=category1_.id where subcategor0_.id=?
Hibernate: insert into quiz (id, answer_four, answer_one, answer_three, answer_two, correct_answer, question, sub_category_id) values (null, ?, ?, ?, ?, ?, ?, ?)
Hibernate: select subcategor0_.id as id1_3_0_, subcategor0_.category_id as category3_3_0_, subcategor0_.name as name2_3_0_, category1_.id as id1_0_1_, category1_.name as name2_0_1_ from sub_category subcategor0_ inner join category category1_ on subcategor0_.category_id=category1_.id where subcategor0_.id=?
Hibernate: insert into quiz (id, answer_four, answer_one, answer_three, answer_two, correct_answer, question, sub_category_id) values (null, ?, ?, ?, ?, ?, ?, ?)
Hibernate: select subcategor0_.id as id1_3_0_, subcategor0_.category_id as category3_3_0_, subcategor0_.name as name2_3_0_, category1_.id as id1_0_1_, category1_.name as name2_0_1_ from sub_category subcategor0_ inner join category category1_ on subcategor0_.category_id=category1_.id where subcategor0_.id=?
Hibernate: insert into quiz (id, answer_four, answer_one, answer_three, answer_two, correct_answer, question, sub_category_id) values (null, ?, ?, ?, ?, ?, ?, ?)
Hibernate: select subcategor0_.id as id1_3_0_, subcategor0_.category_id as category3_3_0_, subcategor0_.name as name2_3_0_, category1_.id as id1_0_1_, category1_.name as name2_0_1_ from sub_category subcategor0_ inner join category category1_ on subcategor0_.category_id=category1_.id where subcategor0_.id=?
Hibernate: insert into quiz (id, answer_four, answer_one, answer_three, answer_two, correct_answer, question, sub_category_id) values (null, ?, ?, ?, ?, ?, ?, ?)
Hibernate: select subcategor0_.id as id1_3_0_, subcategor0_.category_id as category3_3_0_, subcategor0_.name as name2_3_0_, category1_.id as id1_0_1_, category1_.name as name2_0_1_ from sub_category subcategor0_ inner join category category1_ on subcategor0_.category_id=category1_.id where subcategor0_.id=?
Hibernate: insert into quiz (id, answer_four, answer_one, answer_three, answer_two, correct_answer, question, sub_category_id) values (null, ?, ?, ?, ?, ?, ?, ?)
Hibernate: select subcategor0_.id as id1_3_0_, subcategor0_.category_id as category3_3_0_, subcategor0_.name as name2_3_0_, category1_.id as id1_0_1_, category1_.name as name2_0_1_ from sub_category subcategor0_ inner join category category1_ on subcategor0_.category_id=category1_.id where subcategor0_.id=?
Hibernate: insert into quiz (id, answer_four, answer_one, answer_three, answer_two, correct_answer, question, sub_category_id) values (null, ?, ?, ?, ?, ?, ?, ?)
Hibernate: select subcategor0_.id as id1_3_0_, subcategor0_.category_id as category3_3_0_, subcategor0_.name as name2_3_0_, category1_.id as id1_0_1_, category1_.name as name2_0_1_ from sub_category subcategor0_ inner join category category1_ on subcategor0_.category_id=category1_.id where subcategor0_.id=?
Hibernate: insert into quiz (id, answer_four, answer_one, answer_three, answer_two, correct_answer, question, sub_category_id) values (null, ?, ?, ?, ?, ?, ?, ?)
Hibernate: select subcategor0_.id as id1_3_0_, subcategor0_.category_id as category3_3_0_, subcategor0_.name as name2_3_0_, category1_.id as id1_0_1_, category1_.name as name2_0_1_ from sub_category subcategor0_ inner join category category1_ on subcategor0_.category_id=category1_.id where subcategor0_.id=?
Hibernate: insert into quiz (id, answer_four, answer_one, answer_three, answer_two, correct_answer, question, sub_category_id) values (null, ?, ?, ?, ?, ?, ?, ?)
01:16:17.572 [main] INFO  org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@735fa79f, org.springframework.security.web.context.SecurityContextPersistenceFilter@756a04f3, org.springframework.security.web.header.HeaderWriterFilter@38649ca3, org.springframework.security.web.authentication.logout.LogoutFilter@7fd04b72, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@326389f7, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@4e11b562, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@649d6592, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7eece587, org.springframework.security.web.session.SessionManagementFilter@a104008, org.springframework.security.web.access.ExceptionTranslationFilter@3f0657a8, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@23e4a15b]
01:16:17.793 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1fae388c: startup date [Wed Apr 04 01:16:09 CEST 2018]; root of context hierarchy
01:16:17.878 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped "{[/],methods=[GET]}" onto public java.lang.String com.ncorp.RedirectForwardHandler.forward()
01:16:17.882 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
01:16:17.883 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
01:16:17.916 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
01:16:17.916 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
01:16:17.959 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
01:16:18.325 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-auto-1"]
01:16:18.336 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-auto-1"]
01:16:18.341 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
01:16:18.368 [main] INFO  org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer - Tomcat started on port(s): 39773 (http)
01:16:18.384 [main] INFO  com.ncorp.selenium.SeleniumLocalIT - Started SeleniumLocalIT in 9.235 seconds (JVM running for 11.894)
01:16:18.687 [http-nio-auto-1-exec-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
01:16:18.687 [http-nio-auto-1-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
01:16:18.707 [http-nio-auto-1-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 20 ms
Hibernate: select user0_.username as username1_5_0_, user0_.enabled as enabled2_5_0_, user0_.password as password3_5_0_, roles1_.user_username as user_use1_4_1_, roles1_.roles as roles2_4_1_ from users user0_ left outer join user_roles roles1_ on user0_.username=roles1_.user_username where user0_.username=?
Hibernate: insert into users (enabled, password, username) values (?, ?, ?)
Hibernate: insert into user_roles (user_username, roles) values (?, ?)
Hibernate: select matchstats0_.id as id1_1_, matchstats0_.matches_lost as matches_2_1_, matchstats0_.matches_won as matches_3_1_, matchstats0_.user_username as user_use4_1_ from match_stats matchstats0_ where matchstats0_.user_username=?
Hibernate: select user0_.username as username1_5_0_, user0_.enabled as enabled2_5_0_, user0_.password as password3_5_0_, roles1_.user_username as user_use1_4_1_, roles1_.roles as roles2_4_1_ from users user0_ left outer join user_roles roles1_ on user0_.username=roles1_.user_username where user0_.username=?
Hibernate: insert into match_stats (id, matches_lost, matches_won, user_username) values (null, ?, ?, ?)
Hibernate: select matchstats0_.id as id1_1_, matchstats0_.matches_lost as matches_2_1_, matchstats0_.matches_won as matches_3_1_, matchstats0_.user_username as user_use4_1_ from match_stats matchstats0_ where matchstats0_.user_username=?
Hibernate: select category0_.id as id1_0_, category0_.name as name2_0_ from category category0_
Hibernate: select category0_.id as id1_0_, category0_.name as name2_0_ from category category0_
Hibernate: select category0_.id as id1_0_, category0_.name as name2_0_ from category category0_
Hibernate: select category0_.id as id1_0_, category0_.name as name2_0_ from category category0_
Hibernate: select category0_.id as id1_0_, category0_.name as name2_0_ from category category0_
Hibernate: select category0_.id as id1_0_, category0_.name as name2_0_ from category category0_
Hibernate: select category0_.id as id1_0_, category0_.name as name2_0_ from category category0_
Hibernate: select category0_.id as id1_0_, category0_.name as name2_0_ from category category0_
Hibernate: select category0_.id as id1_0_, category0_.name as name2_0_ from category category0_
Hibernate: select category0_.id as id1_0_, category0_.name as name2_0_ from category category0_
Hibernate: select category0_.id as id1_0_, category0_.name as name2_0_ from category category0_
Hibernate: select count(quiz0_.id) as col_0_0_ from quiz quiz0_ cross join sub_category subcategor1_ where quiz0_.sub_category_id=subcategor1_.id and subcategor1_.category_id=?
Hibernate: select quiz0_.id as id1_2_, quiz0_.answer_four as answer_f2_2_, quiz0_.answer_one as answer_o3_2_, quiz0_.answer_three as answer_t4_2_, quiz0_.answer_two as answer_t5_2_, quiz0_.correct_answer as correct_6_2_, quiz0_.question as question7_2_, quiz0_.sub_category_id as sub_cate8_2_ from quiz quiz0_ cross join sub_category subcategor1_ where quiz0_.sub_category_id=subcategor1_.id and subcategor1_.category_id=? limit ? offset ?
Hibernate: select subcategor0_.id as id1_3_0_, subcategor0_.category_id as category3_3_0_, subcategor0_.name as name2_3_0_, category1_.id as id1_0_1_, category1_.name as name2_0_1_ from sub_category subcategor0_ inner join category category1_ on subcategor0_.category_id=category1_.id where subcategor0_.id=?
Hibernate: select quiz0_.id as id1_2_, quiz0_.answer_four as answer_f2_2_, quiz0_.answer_one as answer_o3_2_, quiz0_.answer_three as answer_t4_2_, quiz0_.answer_two as answer_t5_2_, quiz0_.correct_answer as correct_6_2_, quiz0_.question as question7_2_, quiz0_.sub_category_id as sub_cate8_2_ from quiz quiz0_ cross join sub_category subcategor1_ where quiz0_.sub_category_id=subcategor1_.id and subcategor1_.category_id=? limit ?
Hibernate: select quiz0_.id as id1_2_, quiz0_.answer_four as answer_f2_2_, quiz0_.answer_one as answer_o3_2_, quiz0_.answer_three as answer_t4_2_, quiz0_.answer_two as answer_t5_2_, quiz0_.correct_answer as correct_6_2_, quiz0_.question as question7_2_, quiz0_.sub_category_id as sub_cate8_2_ from quiz quiz0_ cross join sub_category subcategor1_ where quiz0_.sub_category_id=subcategor1_.id and subcategor1_.category_id=? limit ? offset ?
Hibernate: select subcategor0_.id as id1_3_0_, subcategor0_.category_id as category3_3_0_, subcategor0_.name as name2_3_0_, category1_.id as id1_0_1_, category1_.name as name2_0_1_ from sub_category subcategor0_ inner join category category1_ on subcategor0_.category_id=category1_.id where subcategor0_.id=?
Hibernate: select quiz0_.id as id1_2_, quiz0_.answer_four as answer_f2_2_, quiz0_.answer_one as answer_o3_2_, quiz0_.answer_three as answer_t4_2_, quiz0_.answer_two as answer_t5_2_, quiz0_.correct_answer as correct_6_2_, quiz0_.question as question7_2_, quiz0_.sub_category_id as sub_cate8_2_ from quiz quiz0_ cross join sub_category subcategor1_ where quiz0_.sub_category_id=subcategor1_.id and subcategor1_.category_id=? limit ? offset ?
Hibernate: select quiz0_.id as id1_2_, quiz0_.answer_four as answer_f2_2_, quiz0_.answer_one as answer_o3_2_, quiz0_.answer_three as answer_t4_2_, quiz0_.answer_two as answer_t5_2_, quiz0_.correct_answer as correct_6_2_, quiz0_.question as question7_2_, quiz0_.sub_category_id as sub_cate8_2_ from quiz quiz0_ cross join sub_category subcategor1_ where quiz0_.sub_category_id=subcategor1_.id and subcategor1_.category_id=? limit ? offset ?
Hibernate: select quiz0_.id as id1_2_0_, quiz0_.answer_four as answer_f2_2_0_, quiz0_.answer_one as answer_o3_2_0_, quiz0_.answer_three as answer_t4_2_0_, quiz0_.answer_two as answer_t5_2_0_, quiz0_.correct_answer as correct_6_2_0_, quiz0_.question as question7_2_0_, quiz0_.sub_category_id as sub_cate8_2_0_, subcategor1_.id as id1_3_1_, subcategor1_.category_id as category3_3_1_, subcategor1_.name as name2_3_1_, category2_.id as id1_0_2_, category2_.name as name2_0_2_ from quiz quiz0_ inner join sub_category subcategor1_ on quiz0_.sub_category_id=subcategor1_.id inner join category category2_ on subcategor1_.category_id=category2_.id where quiz0_.id=?
Hibernate: select matchstats0_.id as id1_1_, matchstats0_.matches_lost as matches_2_1_, matchstats0_.matches_won as matches_3_1_, matchstats0_.user_username as user_use4_1_ from match_stats matchstats0_ where matchstats0_.user_username=?
Hibernate: select user0_.username as username1_5_0_, user0_.enabled as enabled2_5_0_, user0_.password as password3_5_0_, roles1_.user_username as user_use1_4_1_, roles1_.roles as roles2_4_1_ from users user0_ left outer join user_roles roles1_ on user0_.username=roles1_.user_username where user0_.username=?
Hibernate: update match_stats set matches_lost=?, matches_won=?, user_username=? where id=?
Hibernate: select user0_.username as username1_5_0_, user0_.enabled as enabled2_5_0_, user0_.password as password3_5_0_, roles1_.user_username as user_use1_4_1_, roles1_.roles as roles2_4_1_ from users user0_ left outer join user_roles roles1_ on user0_.username=roles1_.user_username where user0_.username=?
Hibernate: insert into users (enabled, password, username) values (?, ?, ?)
Hibernate: insert into user_roles (user_username, roles) values (?, ?)
Hibernate: select matchstats0_.id as id1_1_, matchstats0_.matches_lost as matches_2_1_, matchstats0_.matches_won as matches_3_1_, matchstats0_.user_username as user_use4_1_ from match_stats matchstats0_ where matchstats0_.user_username=?
Hibernate: select user0_.username as username1_5_0_, user0_.enabled as enabled2_5_0_, user0_.password as password3_5_0_, roles1_.user_username as user_use1_4_1_, roles1_.roles as roles2_4_1_ from users user0_ left outer join user_roles roles1_ on user0_.username=roles1_.user_username where user0_.username=?
Hibernate: insert into match_stats (id, matches_lost, matches_won, user_username) values (null, ?, ?, ?)
Hibernate: select matchstats0_.id as id1_1_, matchstats0_.matches_lost as matches_2_1_, matchstats0_.matches_won as matches_3_1_, matchstats0_.user_username as user_use4_1_ from match_stats matchstats0_ where matchstats0_.user_username=?
Hibernate: select category0_.id as id1_0_, category0_.name as name2_0_ from category category0_
Hibernate: select category0_.id as id1_0_, category0_.name as name2_0_ from category category0_
Hibernate: select category0_.id as id1_0_, category0_.name as name2_0_ from category category0_
Hibernate: select category0_.id as id1_0_, category0_.name as name2_0_ from category category0_
Hibernate: select category0_.id as id1_0_, category0_.name as name2_0_ from category category0_
Hibernate: select category0_.id as id1_0_, category0_.name as name2_0_ from category category0_
Hibernate: select category0_.id as id1_0_, category0_.name as name2_0_ from category category0_
Hibernate: select category0_.id as id1_0_, category0_.name as name2_0_ from category category0_
Hibernate: select category0_.id as id1_0_, category0_.name as name2_0_ from category category0_
Hibernate: select category0_.id as id1_0_, category0_.name as name2_0_ from category category0_
Hibernate: select category0_.id as id1_0_, category0_.name as name2_0_ from category category0_
Hibernate: select count(quiz0_.id) as col_0_0_ from quiz quiz0_ cross join sub_category subcategor1_ where quiz0_.sub_category_id=subcategor1_.id and subcategor1_.category_id=?
Hibernate: select quiz0_.id as id1_2_, quiz0_.answer_four as answer_f2_2_, quiz0_.answer_one as answer_o3_2_, quiz0_.answer_three as answer_t4_2_, quiz0_.answer_two as answer_t5_2_, quiz0_.correct_answer as correct_6_2_, quiz0_.question as question7_2_, quiz0_.sub_category_id as sub_cate8_2_ from quiz quiz0_ cross join sub_category subcategor1_ where quiz0_.sub_category_id=subcategor1_.id and subcategor1_.category_id=? limit ? offset ?
Hibernate: select subcategor0_.id as id1_3_0_, subcategor0_.category_id as category3_3_0_, subcategor0_.name as name2_3_0_, category1_.id as id1_0_1_, category1_.name as name2_0_1_ from sub_category subcategor0_ inner join category category1_ on subcategor0_.category_id=category1_.id where subcategor0_.id=?
Hibernate: select quiz0_.id as id1_2_, quiz0_.answer_four as answer_f2_2_, quiz0_.answer_one as answer_o3_2_, quiz0_.answer_three as answer_t4_2_, quiz0_.answer_two as answer_t5_2_, quiz0_.correct_answer as correct_6_2_, quiz0_.question as question7_2_, quiz0_.sub_category_id as sub_cate8_2_ from quiz quiz0_ cross join sub_category subcategor1_ where quiz0_.sub_category_id=subcategor1_.id and subcategor1_.category_id=? limit ? offset ?
Hibernate: select quiz0_.id as id1_2_, quiz0_.answer_four as answer_f2_2_, quiz0_.answer_one as answer_o3_2_, quiz0_.answer_three as answer_t4_2_, quiz0_.answer_two as answer_t5_2_, quiz0_.correct_answer as correct_6_2_, quiz0_.question as question7_2_, quiz0_.sub_category_id as sub_cate8_2_ from quiz quiz0_ cross join sub_category subcategor1_ where quiz0_.sub_category_id=subcategor1_.id and subcategor1_.category_id=? limit ?
Hibernate: select subcategor0_.id as id1_3_0_, subcategor0_.category_id as category3_3_0_, subcategor0_.name as name2_3_0_, category1_.id as id1_0_1_, category1_.name as name2_0_1_ from sub_category subcategor0_ inner join category category1_ on subcategor0_.category_id=category1_.id where subcategor0_.id=?
Hibernate: select quiz0_.id as id1_2_, quiz0_.answer_four as answer_f2_2_, quiz0_.answer_one as answer_o3_2_, quiz0_.answer_three as answer_t4_2_, quiz0_.answer_two as answer_t5_2_, quiz0_.correct_answer as correct_6_2_, quiz0_.question as question7_2_, quiz0_.sub_category_id as sub_cate8_2_ from quiz quiz0_ cross join sub_category subcategor1_ where quiz0_.sub_category_id=subcategor1_.id and subcategor1_.category_id=? limit ? offset ?
Hibernate: select quiz0_.id as id1_2_, quiz0_.answer_four as answer_f2_2_, quiz0_.answer_one as answer_o3_2_, quiz0_.answer_three as answer_t4_2_, quiz0_.answer_two as answer_t5_2_, quiz0_.correct_answer as correct_6_2_, quiz0_.question as question7_2_, quiz0_.sub_category_id as sub_cate8_2_ from quiz quiz0_ cross join sub_category subcategor1_ where quiz0_.sub_category_id=subcategor1_.id and subcategor1_.category_id=? limit ? offset ?
counter: 0
Hibernate: select quiz0_.id as id1_2_0_, quiz0_.answer_four as answer_f2_2_0_, quiz0_.answer_one as answer_o3_2_0_, quiz0_.answer_three as answer_t4_2_0_, quiz0_.answer_two as answer_t5_2_0_, quiz0_.correct_answer as correct_6_2_0_, quiz0_.question as question7_2_0_, quiz0_.sub_category_id as sub_cate8_2_0_, subcategor1_.id as id1_3_1_, subcategor1_.category_id as category3_3_1_, subcategor1_.name as name2_3_1_, category2_.id as id1_0_2_, category2_.name as name2_0_2_ from quiz quiz0_ inner join sub_category subcategor1_ on quiz0_.sub_category_id=subcategor1_.id inner join category category2_ on subcategor1_.category_id=category2_.id where quiz0_.id=?
counter: 1
Hibernate: select quiz0_.id as id1_2_0_, quiz0_.answer_four as answer_f2_2_0_, quiz0_.answer_one as answer_o3_2_0_, quiz0_.answer_three as answer_t4_2_0_, quiz0_.answer_two as answer_t5_2_0_, quiz0_.correct_answer as correct_6_2_0_, quiz0_.question as question7_2_0_, quiz0_.sub_category_id as sub_cate8_2_0_, subcategor1_.id as id1_3_1_, subcategor1_.category_id as category3_3_1_, subcategor1_.name as name2_3_1_, category2_.id as id1_0_2_, category2_.name as name2_0_2_ from quiz quiz0_ inner join sub_category subcategor1_ on quiz0_.sub_category_id=subcategor1_.id inner join category category2_ on subcategor1_.category_id=category2_.id where quiz0_.id=?
counter: 2
Hibernate: select quiz0_.id as id1_2_0_, quiz0_.answer_four as answer_f2_2_0_, quiz0_.answer_one as answer_o3_2_0_, quiz0_.answer_three as answer_t4_2_0_, quiz0_.answer_two as answer_t5_2_0_, quiz0_.correct_answer as correct_6_2_0_, quiz0_.question as question7_2_0_, quiz0_.sub_category_id as sub_cate8_2_0_, subcategor1_.id as id1_3_1_, subcategor1_.category_id as category3_3_1_, subcategor1_.name as name2_3_1_, category2_.id as id1_0_2_, category2_.name as name2_0_2_ from quiz quiz0_ inner join sub_category subcategor1_ on quiz0_.sub_category_id=subcategor1_.id inner join category category2_ on subcategor1_.category_id=category2_.id where quiz0_.id=?
counter: 3
Hibernate: select quiz0_.id as id1_2_0_, quiz0_.answer_four as answer_f2_2_0_, quiz0_.answer_one as answer_o3_2_0_, quiz0_.answer_three as answer_t4_2_0_, quiz0_.answer_two as answer_t5_2_0_, quiz0_.correct_answer as correct_6_2_0_, quiz0_.question as question7_2_0_, quiz0_.sub_category_id as sub_cate8_2_0_, subcategor1_.id as id1_3_1_, subcategor1_.category_id as category3_3_1_, subcategor1_.name as name2_3_1_, category2_.id as id1_0_2_, category2_.name as name2_0_2_ from quiz quiz0_ inner join sub_category subcategor1_ on quiz0_.sub_category_id=subcategor1_.id inner join category category2_ on subcategor1_.category_id=category2_.id where quiz0_.id=?
counter: 4
Hibernate: select quiz0_.id as id1_2_0_, quiz0_.answer_four as answer_f2_2_0_, quiz0_.answer_one as answer_o3_2_0_, quiz0_.answer_three as answer_t4_2_0_, quiz0_.answer_two as answer_t5_2_0_, quiz0_.correct_answer as correct_6_2_0_, quiz0_.question as question7_2_0_, quiz0_.sub_category_id as sub_cate8_2_0_, subcategor1_.id as id1_3_1_, subcategor1_.category_id as category3_3_1_, subcategor1_.name as name2_3_1_, category2_.id as id1_0_2_, category2_.name as name2_0_2_ from quiz quiz0_ inner join sub_category subcategor1_ on quiz0_.sub_category_id=subcategor1_.id inner join category category2_ on subcategor1_.category_id=category2_.id where quiz0_.id=?
Hibernate: select matchstats0_.id as id1_1_, matchstats0_.matches_lost as matches_2_1_, matchstats0_.matches_won as matches_3_1_, matchstats0_.user_username as user_use4_1_ from match_stats matchstats0_ where matchstats0_.user_username=?
Hibernate: select user0_.username as username1_5_0_, user0_.enabled as enabled2_5_0_, user0_.password as password3_5_0_, roles1_.user_username as user_use1_4_1_, roles1_.roles as roles2_4_1_ from users user0_ left outer join user_roles roles1_ on user0_.username=roles1_.user_username where user0_.username=?
Hibernate: update match_stats set matches_lost=?, matches_won=?, user_username=? where id=?
Hibernate: select user0_.username as username1_5_0_, user0_.enabled as enabled2_5_0_, user0_.password as password3_5_0_, roles1_.user_username as user_use1_4_1_, roles1_.roles as roles2_4_1_ from users user0_ left outer join user_roles roles1_ on user0_.username=roles1_.user_username where user0_.username=?
Hibernate: insert into users (enabled, password, username) values (?, ?, ?)
Hibernate: insert into user_roles (user_username, roles) values (?, ?)
Hibernate: select matchstats0_.id as id1_1_, matchstats0_.matches_lost as matches_2_1_, matchstats0_.matches_won as matches_3_1_, matchstats0_.user_username as user_use4_1_ from match_stats matchstats0_ where matchstats0_.user_username=?
Hibernate: select user0_.username as username1_5_0_, user0_.enabled as enabled2_5_0_, user0_.password as password3_5_0_, roles1_.user_username as user_use1_4_1_, roles1_.roles as roles2_4_1_ from users user0_ left outer join user_roles roles1_ on user0_.username=roles1_.user_username where user0_.username=?
Hibernate: insert into match_stats (id, matches_lost, matches_won, user_username) values (null, ?, ?, ?)
Hibernate: select matchstats0_.id as id1_1_, matchstats0_.matches_lost as matches_2_1_, matchstats0_.matches_won as matches_3_1_, matchstats0_.user_username as user_use4_1_ from match_stats matchstats0_ where matchstats0_.user_username=?
Hibernate: select user0_.username as username1_5_0_, user0_.enabled as enabled2_5_0_, user0_.password as password3_5_0_, roles1_.user_username as user_use1_4_1_, roles1_.roles as roles2_4_1_ from users user0_ left outer join user_roles roles1_ on user0_.username=roles1_.user_username where user0_.username=?
Hibernate: insert into users (enabled, password, username) values (?, ?, ?)
Hibernate: insert into user_roles (user_username, roles) values (?, ?)
Hibernate: select matchstats0_.id as id1_1_, matchstats0_.matches_lost as matches_2_1_, matchstats0_.matches_won as matches_3_1_, matchstats0_.user_username as user_use4_1_ from match_stats matchstats0_ where matchstats0_.user_username=?
Hibernate: select user0_.username as username1_5_0_, user0_.enabled as enabled2_5_0_, user0_.password as password3_5_0_, roles1_.user_username as user_use1_4_1_, roles1_.roles as roles2_4_1_ from users user0_ left outer join user_roles roles1_ on user0_.username=roles1_.user_username where user0_.username=?
Hibernate: insert into match_stats (id, matches_lost, matches_won, user_username) values (null, ?, ?, ?)
Hibernate: select matchstats0_.id as id1_1_, matchstats0_.matches_lost as matches_2_1_, matchstats0_.matches_won as matches_3_1_, matchstats0_.user_username as user_use4_1_ from match_stats matchstats0_ where matchstats0_.user_username=?
Hibernate: select category0_.id as id1_0_, category0_.name as name2_0_ from category category0_
Hibernate: select category0_.id as id1_0_, category0_.name as name2_0_ from category category0_
Hibernate: select category0_.id as id1_0_, category0_.name as name2_0_ from category category0_
Hibernate: select category0_.id as id1_0_, category0_.name as name2_0_ from category category0_
Hibernate: select category0_.id as id1_0_, category0_.name as name2_0_ from category category0_
Hibernate: select category0_.id as id1_0_, category0_.name as name2_0_ from category category0_
Hibernate: select category0_.id as id1_0_, category0_.name as name2_0_ from category category0_
Hibernate: select category0_.id as id1_0_, category0_.name as name2_0_ from category category0_
Hibernate: select category0_.id as id1_0_, category0_.name as name2_0_ from category category0_
Hibernate: select category0_.id as id1_0_, category0_.name as name2_0_ from category category0_
Hibernate: select category0_.id as id1_0_, category0_.name as name2_0_ from category category0_
Hibernate: select count(quiz0_.id) as col_0_0_ from quiz quiz0_ cross join sub_category subcategor1_ where quiz0_.sub_category_id=subcategor1_.id and subcategor1_.category_id=?
Hibernate: select quiz0_.id as id1_2_, quiz0_.answer_four as answer_f2_2_, quiz0_.answer_one as answer_o3_2_, quiz0_.answer_three as answer_t4_2_, quiz0_.answer_two as answer_t5_2_, quiz0_.correct_answer as correct_6_2_, quiz0_.question as question7_2_, quiz0_.sub_category_id as sub_cate8_2_ from quiz quiz0_ cross join sub_category subcategor1_ where quiz0_.sub_category_id=subcategor1_.id and subcategor1_.category_id=? limit ? offset ?
Hibernate: select subcategor0_.id as id1_3_0_, subcategor0_.category_id as category3_3_0_, subcategor0_.name as name2_3_0_, category1_.id as id1_0_1_, category1_.name as name2_0_1_ from sub_category subcategor0_ inner join category category1_ on subcategor0_.category_id=category1_.id where subcategor0_.id=?
Hibernate: select quiz0_.id as id1_2_, quiz0_.answer_four as answer_f2_2_, quiz0_.answer_one as answer_o3_2_, quiz0_.answer_three as answer_t4_2_, quiz0_.answer_two as answer_t5_2_, quiz0_.correct_answer as correct_6_2_, quiz0_.question as question7_2_, quiz0_.sub_category_id as sub_cate8_2_ from quiz quiz0_ cross join sub_category subcategor1_ where quiz0_.sub_category_id=subcategor1_.id and subcategor1_.category_id=? limit ? offset ?
Hibernate: select quiz0_.id as id1_2_, quiz0_.answer_four as answer_f2_2_, quiz0_.answer_one as answer_o3_2_, quiz0_.answer_three as answer_t4_2_, quiz0_.answer_two as answer_t5_2_, quiz0_.correct_answer as correct_6_2_, quiz0_.question as question7_2_, quiz0_.sub_category_id as sub_cate8_2_ from quiz quiz0_ cross join sub_category subcategor1_ where quiz0_.sub_category_id=subcategor1_.id and subcategor1_.category_id=? limit ? offset ?
Hibernate: select quiz0_.id as id1_2_, quiz0_.answer_four as answer_f2_2_, quiz0_.answer_one as answer_o3_2_, quiz0_.answer_three as answer_t4_2_, quiz0_.answer_two as answer_t5_2_, quiz0_.correct_answer as correct_6_2_, quiz0_.question as question7_2_, quiz0_.sub_category_id as sub_cate8_2_ from quiz quiz0_ cross join sub_category subcategor1_ where quiz0_.sub_category_id=subcategor1_.id and subcategor1_.category_id=? limit ?
Hibernate: select subcategor0_.id as id1_3_0_, subcategor0_.category_id as category3_3_0_, subcategor0_.name as name2_3_0_, category1_.id as id1_0_1_, category1_.name as name2_0_1_ from sub_category subcategor0_ inner join category category1_ on subcategor0_.category_id=category1_.id where subcategor0_.id=?
Hibernate: select quiz0_.id as id1_2_, quiz0_.answer_four as answer_f2_2_, quiz0_.answer_one as answer_o3_2_, quiz0_.answer_three as answer_t4_2_, quiz0_.answer_two as answer_t5_2_, quiz0_.correct_answer as correct_6_2_, quiz0_.question as question7_2_, quiz0_.sub_category_id as sub_cate8_2_ from quiz quiz0_ cross join sub_category subcategor1_ where quiz0_.sub_category_id=subcategor1_.id and subcategor1_.category_id=? limit ? offset ?
Hibernate: select user0_.username as username1_5_0_, user0_.enabled as enabled2_5_0_, user0_.password as password3_5_0_, roles1_.user_username as user_use1_4_1_, roles1_.roles as roles2_4_1_ from users user0_ left outer join user_roles roles1_ on user0_.username=roles1_.user_username where user0_.username=?
Hibernate: insert into users (enabled, password, username) values (?, ?, ?)
Hibernate: insert into user_roles (user_username, roles) values (?, ?)
Hibernate: select matchstats0_.id as id1_1_, matchstats0_.matches_lost as matches_2_1_, matchstats0_.matches_won as matches_3_1_, matchstats0_.user_username as user_use4_1_ from match_stats matchstats0_ where matchstats0_.user_username=?
Hibernate: select user0_.username as username1_5_0_, user0_.enabled as enabled2_5_0_, user0_.password as password3_5_0_, roles1_.user_username as user_use1_4_1_, roles1_.roles as roles2_4_1_ from users user0_ left outer join user_roles roles1_ on user0_.username=roles1_.user_username where user0_.username=?
Hibernate: insert into match_stats (id, matches_lost, matches_won, user_username) values (null, ?, ?, ?)
Hibernate: select matchstats0_.id as id1_1_, matchstats0_.matches_lost as matches_2_1_, matchstats0_.matches_won as matches_3_1_, matchstats0_.user_username as user_use4_1_ from match_stats matchstats0_ where matchstats0_.user_username=?
Hibernate: select category0_.id as id1_0_, category0_.name as name2_0_ from category category0_
Hibernate: select category0_.id as id1_0_, category0_.name as name2_0_ from category category0_
Hibernate: select category0_.id as id1_0_, category0_.name as name2_0_ from category category0_
Hibernate: select category0_.id as id1_0_, category0_.name as name2_0_ from category category0_
Hibernate: select category0_.id as id1_0_, category0_.name as name2_0_ from category category0_
Hibernate: select category0_.id as id1_0_, category0_.name as name2_0_ from category category0_
Hibernate: select category0_.id as id1_0_, category0_.name as name2_0_ from category category0_
01:16:24.627 [Thread-6] INFO  org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext - Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1fae388c: startup date [Wed Apr 04 01:16:09 CEST 2018]; root of context hierarchy
01:16:24.631 [Thread-6] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
